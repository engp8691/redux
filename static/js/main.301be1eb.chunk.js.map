{"version":3,"sources":["actions/index.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","containers/VisibleTodoList.js","components/App.js","reducers/index.js","index.js"],"names":["nextTodoId","addTodo","text","type","id","VisibilityFilters","connect","state","ownProps","console","log","active","filter","visibilityFilter","dispatch","onClick","_ref","children","react_default","a","createElement","disabled","style","marginLeft","Footer","className","containers_FilterLink","Object","objectSpread","props","textInput","onSubmit","e","preventDefault","value","trim","ref","txt","Todo","completed","textDecoration","todos","t","Error","getVisibleTodos","toggleTodo","_ref2","map","todo","VisibleTodoList_Todo","assign","key","App","store","this","axios","get","then","res","data","length","elem","desc","catch","error","containers_AddTodo","containers_VisibleTodoList","components_Footer","React","Component","reducers","combineReducers","arguments","undefined","action","String","toConsumableArray","concat","createStore","combinedReducer","render","react_redux_es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.301be1eb.chunk.js","sourcesContent":["let nextTodoId = 0\nexport const addTodo = text => ({\n  type: 'ADD_TODO',\n  id: nextTodoId++,\n  text\n})\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n})\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\n\nconst FilterLink = ({active, children, onClick}) => (\n\t<button\n\t\tonClick={onClick}\n\t\tdisabled={active}\n\t\tstyle={{\n\t\t\tmarginLeft: '4px',\n\t\t}}\n\t>\n\t\t{children}\n\t</button>\n)\n\n// FilterLink has props of active, onClick. So map the stats to active prop and dispatch\n// function to onClick handle as prop.\nconst mapStateToProps = (state, ownProps) => {\n\tconsole.log(20, ownProps);\n\treturn {active: ownProps.filter === state.visibilityFilter }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\tonClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(FilterLink)\n\n","import React from 'react'\nimport FilterLink from '../containers/FilterLink'\nimport { VisibilityFilters } from '../actions'\nimport './App.css'\n\nconst Footer = () => (\n\t<div>\n\t\t<span className=\"note\">*触摸事项变更完成状态，完成事项加画横线</span>\n\t\t<br/>\n\t\t<span>显示: </span>\n\t\t<FilterLink filter={VisibilityFilters.SHOW_ALL}>\n\t\t\t全部\n\t\t</FilterLink>\n\t\t<FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\n\t\t\t尚未完成\n\t\t</FilterLink>\n\t\t<FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\n\t\t\t已经完成\n\t\t</FilterLink>\n\t</div>\n)\n\nexport default Footer\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../actions'\n\nconst mapStateToProps = function(state, ownProps) {\n\treturn {...state, ...ownProps}\n}\n\nconst AddTodo = (props) => {\n\t// let dispatch = props.dispatch;\n\t// This is the fancy way\n\tlet { dispatch } = props;\n\n\tlet textInput;\n\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={(e) => {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif (!textInput.value.trim()) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tdispatch(addTodo(textInput.value));\n\t\t\t\ttextInput.value = ''\n\t\t\t}}>\n\n\t\t\t<input type=\"text\" ref={(txt)=>{textInput=txt;}} />\n\t\t\t<button type=\"submit\">\n\t\t\t\t添加今日事项\n\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\n// AddTodo is a container component, connect it to the Redux store.\nexport default connect(mapStateToProps)(AddTodo)\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { toggleTodo } from '../actions'\nimport { VisibilityFilters } from '../actions'\n\nconst Todo = ({ onClick, completed, text }) => (\n\t<li\n\t\tonClick={onClick}\n\t\tstyle={{\n\t\t\ttextDecoration: completed ? 'line-through' : 'none'\n\t\t}}\n\t>\n\t\t{text}\n\t</li>\n)\n\nconst VisibleTodoList = ({ todos, toggleTodo }) => (\n\t<ul>\n\t\t{todos.map(todo =>\n\t\t\t<Todo\n\t\t\t\tkey={todo.id}\n\t\t\t\t{...todo}\n\t\t\t\tonClick={() => toggleTodo(todo.id)}\n\t\t\t/>\n\t\t)}\n\t</ul>\n)\n\n// Auxiliary function\nconst getVisibleTodos = (todos, filter) => {\n\tswitch (filter) {\n\t\tcase VisibilityFilters.SHOW_ALL:\n\t\t\treturn todos\n\t\tcase VisibilityFilters.SHOW_COMPLETED:\n\t\t\treturn todos.filter(t => t.completed)\n\t\tcase VisibilityFilters.SHOW_ACTIVE:\n\t\t\treturn todos.filter(t => !t.completed)\n\t\tdefault:\n\t\t\tthrow new Error('Unknown filter: ' + filter)\n\t}\n}\n\nconst mapStateToProps = state => ({\n\ttodos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n\ttoggleTodo: id => dispatch(toggleTodo(id))\n})\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(VisibleTodoList)\n\n","import React from 'react'\nimport Footer from './Footer'\nimport AddTodo from '../containers/AddTodo'\nimport {addTodo} from '../actions';\nimport axios from 'axios';\nimport VisibleTodoList from '../containers/VisibleTodoList'\nimport './App.css';\n\nclass App extends React.Component {\n\tcomponentDidMount() {\n\t\tlet {store} = this.props;\n\n\t\taxios.get(`./todos.json`).then(res => {\n\t\t\tconsole.log(13, res.data);\n\t\t\t// let todos = JSON.parse(res.data);\n\t\t\tlet todos = res.data.todos;\n\n\t\t\tif(todos.length>0){\n\t\t\t\ttodos.map((elem)=>{\n\t\t\t\t\tlet desc = elem.desc;\n\t\t\t\t\tstore.dispatch(addTodo(desc));\n\n\t\t\t\t\treturn desc;\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\tstore.dispatch(addTodo(\"起床\"));\n\t\t\t\tstore.dispatch(addTodo(\"洗漱\"));\n\t\t\t}\n\t\t}).catch(function (error) {\n\t\t\tstore.dispatch(addTodo(\"起床\"));\n\t\t\tstore.dispatch(addTodo(\"洗漱\"));\n\t\t});\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<AddTodo />\n\t\t\t\t<VisibleTodoList />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App\n\n","import { VisibilityFilters } from '../actions'\nimport { combineReducers } from 'redux'\n\nconst todos = (state = [], action) => {\n\tconsole.log(5, \"todos: \", action);\n\n\tswitch (action.type) {\n\t\tcase 'ADD_TODO':\n\t\t\tif(action.text){\n\t\t\t\tif(String(action.text).trim().length<1){\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\treturn state;\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\t{\n\t\t\t\t\tid: action.id,\n\t\t\t\t\ttext: action.text,\n\t\t\t\t\tcompleted: false\n\t\t\t\t}\n\t\t\t]\n\t\tcase 'TOGGLE_TODO':\n\t\t\treturn state.map(todo =>\n\t\t\t\t(todo.id === action.id) ? {...todo, completed: !todo.completed} : todo\n\t\t\t)\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n\tconsole.log(27, \"visibilityFilter: \", action);\n\n\tswitch (action.type) {\n\t\tcase 'SET_VISIBILITY_FILTER':\n\t\t\treturn action.filter\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst reducers = combineReducers({todos, visibilityFilter});\n\nexport default reducers;\n\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport combinedReducer from './reducers'\n\nconst store = createStore(combinedReducer)\n\nrender(\n  <Provider store={store}>\n    <App store={store}/>\n  </Provider>,\n\n  document.getElementById('root')\n)\n"],"sourceRoot":""}